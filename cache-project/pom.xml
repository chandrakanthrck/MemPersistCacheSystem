<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- Lookup parent from repository -->
	</parent>

	<groupId>com.github.chandrakanthrck</groupId>
	<artifactId>cache-project</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>CacheProject</name>
	<description>A caching solution with options for in-memory or persistent storage, ensuring synchronization between both. Includes functionality to measure and compare latency between storage types.</description>

	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- Spring Data JPA for persistence -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Web for building REST APIs -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot DevTools for hot reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- MySQL Connector for persistence -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.33</version>
		</dependency>

		<!-- Micrometer for Prometheus integration -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- Spring Boot Actuator for metrics and monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Lombok for reducing boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Boot Starter Test for unit testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin for packaging the application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.3.4</version> <!-- Match Spring Boot version -->
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Maven Compiler Plugin to ensure correct Java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version> <!-- Latest stable version -->
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version> <!-- Ensure annotation processing for Lombok -->
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Production Profile -->
		<profile>
			<id>production</id>
			<properties>
				<spring.config.activate.on-profile>production</spring.config.activate.on-profile>
				<config.file>src/main/resources/application-prod.properties</config.file>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>

		<!-- Staging Profile -->
		<profile>
			<id>staging</id>
			<properties>
				<spring.config.activate.on-profile>staging</spring.config.activate.on-profile>
				<config.file>src/main/resources/application-staging.properties</config.file>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>

		<!-- Non-Production Profile -->
		<profile>
			<id>non-prod</id>
			<properties>
				<spring.config.activate.on-profile>non-prod</spring.config.activate.on-profile>
				<config.file>src/main/resources/application-nonprod.properties</config.file>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>

</project>
