name: CI/CD Pipeline for MemPersist Cache

on:
  push:
    branches:
      - main
      - staging
      - non-prod
  pull_request:
    branches:
      - main
      - staging
      - non-prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/MemPersistCacheSystem/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            mvn clean install -f MemPersistCacheSystem/pom.xml -Pproduction
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            mvn clean install -f MemPersistCacheSystem/pom.xml -Pstaging
          else
            mvn clean install -f MemPersistCacheSystem/pom.xml -Pnon-prod
          fi

      - name: Run Tests
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            mvn test -f MemPersistCacheSystem/pom.xml -Pproduction
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            mvn test -f MemPersistCacheSystem/pom.xml -Pstaging
          else
            mvn test -f MemPersistCacheSystem/pom.xml -Pnon-prod
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Environment
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "env=staging" >> $GITHUB_ENV
          else
            echo "env=non-prod" >> $GITHUB_ENV
          fi

      - name: Deploy to Server
        env:
          ENVIRONMENT: ${{ env.env }}
        run: |
          echo "Deploying to $ENVIRONMENT environment..."
          if [[ "$ENVIRONMENT" == "production" ]]; then
            echo "Deploying to Production Server..."
            # Example: ssh user@production-server 'deploy-commands'
          elif [[ "$ENVIRONMENT" == "staging" ]]; then
            echo "Deploying to Staging Server..."
            # Example: ssh user@staging-server 'deploy-commands'
          else
            echo "Deploying to Non-Prod Server..."
            # Example: ssh user@non-prod-server 'deploy-commands'
          fi
